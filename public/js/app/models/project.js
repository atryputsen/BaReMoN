// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'backbone'], function($, _, Backbone) {
    var Project, _ref;

    return Project = (function(_super) {
      __extends(Project, _super);

      function Project() {
        _ref = Project.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Project.prototype.idAttribute = "_id";

      Project.prototype.urlRoot = "/projects";

      Project.prototype.defaults = {
        name: '',
        client_id: '',
        technology: '',
        description: ''
      };

      Project.prototype.validate = function(attrs) {
        var errors, fields, i, nameLen, _i, _len;

        errors = {};
        if (!attrs._silent) {
          /* check required fields
          */

          fields = ['name', 'client_id', 'technology', 'description'];
          for (_i = 0, _len = fields.length; _i < _len; _i++) {
            i = fields[_i];
            if (!attrs[fields[i]]) {
              errors[fields[i]] = fields[i] + ' required';
            }
          }
          /* check valid name
          */

          if (attrs.name) {
            nameLen = attrs.name.length;
          } else {
            nameLen = null;
          }
          if (nameLen < 2 || nameLen > 100) {
            errors.name = "invalid name";
          }
          if (_.keys(errors).length > 0) {
            return {
              errors: errors
            };
          }
        }
      };

      return Project;

    })(Backbone.Model);
  });

}).call(this);
