// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['jquery', 'underscore', 'backbone', 'jade!app/templates/clients/show', 'ClientModel', 'ProjectCollection', 'ProjectModel'], function($, _, Backbone, tpl, Client, Projects, Project) {
  var ClientView, _ref;

  return ClientView = (function(_super) {
    __extends(ClientView, _super);

    function ClientView() {
      _ref = ClientView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    ClientView.prototype.initialize = function() {
      this.template = tpl;
      return this.collection = new Projects();
    };

    ClientView.prototype.events = {
      "click .delete-btn": "removeClient"
    };

    ClientView.prototype.render = function() {
      var _this = this;

      this.collection.fetch({
        success: function(model) {
          var tmpl;

          console.log(model.toJSON());
          tmpl = _this.template({
            client: _this.model.toJSON(),
            projects: model.toJSON()
          });
          return $(_this.el).html(tmpl);
        }
      });
      return this;
    };

    ClientView.prototype.removeClient = function(e) {
      e.preventDefault();
      return this.model.destroy({
        sync: true,
        success: function(model) {
          return model.trigger('delete-success');
        }
      });
    };

    return ClientView;

  })(Backbone.View);
});
